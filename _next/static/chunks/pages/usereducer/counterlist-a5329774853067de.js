(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[81],{4865:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/usereducer/counterlist",function(){return n(8712)}])},4808:function(e,t,n){"use strict";n.d(t,{zv:function(){return p},VJ:function(){return m},FM:function(){return j}});var o=n(5893),r=n(7294),s=n(5697),i=n.n(s);function d(e){let{submitForm:t}=e;return(0,o.jsxs)("form",{onSubmit:t,children:[(0,o.jsx)("h4",{children:"Add Todo"}),(0,o.jsx)("input",{type:"text",id:"title",placeholder:"Enter title"}),(0,o.jsx)("br",{}),(0,o.jsx)("button",{type:"submit",children:"Add"})]})}d.propTypes={submitForm:i().func};let l={CREATE:"create",READ:"read",UPDATE:"update",DELETE:"delete",LIST:"list",CLEAR_LIST:"clear_list",RESET_LIST:"reset_list"};var c=JSON.parse('[{"id":1,"title":"clean the house","status":"pending"},{"id":2,"title":"eat breakfast","status":"pending"},{"id":3,"title":"wash clothes","status":"pending"},{"id":4,"title":"watch cartoons","status":"pending"},{"id":5,"title":"play games","status":"pending"}]');let u=(e,t)=>{if(t.type===l.CLEAR_LIST)return{...e,todos:[]};if(t.type===l.RESET_LIST)return{...e,todos:c};if(t.type===l.DELETE)return{...e,todos:e.todos.filter(e=>e.id!==t.payload)};if(t.type===l.CREATE){let n=e.todos.length,o={...t.payload,id:n,status:"pending"};return{...e,todos:[...e.todos,o]}}throw Error("Invalid action type ".concat(t.type,"."))},a={todos:c};var h=function(){let[e,t]=(0,r.useReducer)(u,a);console.log("todolist render");let n=()=>{t({type:l.CLEAR_LIST})},s=()=>{t({type:l.RESET_LIST})},i=e=>{t({type:l.DELETE,payload:e})},c=e=>{e.preventDefault();let n={title:e.target.title.value};t({type:l.CREATE,payload:n})};return(0,o.jsxs)("div",{children:[(0,o.jsx)("br",{}),(0,o.jsx)("h3",{children:"Todo List"}),(0,o.jsx)("button",{onClick:n,children:"Clear"})," \xa0",(0,o.jsx)("button",{onClick:s,children:"Reset"}),(0,o.jsx)("br",{}),(0,o.jsx)("br",{}),(0,o.jsx)("hr",{}),(0,o.jsx)(d,{submitForm:c}),(0,o.jsx)("ul",{children:e.todos.map((e,t)=>(0,o.jsxs)("li",{children:[(0,o.jsx)("span",{children:e.title})," \xa0",(0,o.jsx)("button",{onClick:()=>i(e.id),children:"remove"})]},t))})]})},p=function(){let[e,t]=(0,r.useState)(0);return console.log("counter render"),(0,o.jsxs)("div",{children:[(0,o.jsx)("h3",{children:"CounterList"}),(0,o.jsx)("p",{children:"Features a Todo list using useReducer and a counter increment button/display. The Todo List component is a child of the Counter component."}),(0,o.jsx)("h3",{children:"Count"}),(0,o.jsx)("p",{children:e}),(0,o.jsx)("button",{onClick:()=>t(e=>e+=1),children:"Increment"}),(0,o.jsx)(h,{})]})},x=function(){let[e,t]=(0,r.useState)(0);return console.log("counter render"),(0,o.jsxs)("div",{children:[(0,o.jsx)("h3",{children:"Counter"}),(0,o.jsx)("p",{children:e}),(0,o.jsx)("button",{onClick:()=>t(e=>e+=1),children:"Increment"})]})},j=function(){return(0,o.jsxs)("div",{children:[(0,o.jsx)("h3",{children:"CounterListOptimized"}),(0,o.jsx)("p",{children:"Features a Todo list using useReducer and a counter increment button/display. The Todo List component and Counter component are children of a parent component."}),(0,o.jsx)(x,{}),(0,o.jsx)(h,{})]})};let E={todos:c};var T=(0,r.memo)(function(){let[e,t]=(0,r.useReducer)(u,E);console.log("todolistmemo render");let n=()=>{t({type:l.CLEAR_LIST})},s=()=>{t({type:l.RESET_LIST})},i=e=>{t({type:l.DELETE,payload:e})};return(0,o.jsxs)("div",{children:[(0,o.jsx)("br",{}),(0,o.jsx)("h3",{children:"Todo List"}),(0,o.jsx)("button",{onClick:n,children:"Clear"})," \xa0",(0,o.jsx)("button",{onClick:s,children:"Reset"}),(0,o.jsx)("br",{}),(0,o.jsx)("br",{}),(0,o.jsx)("hr",{}),(0,o.jsx)("ul",{children:e.todos.map((e,t)=>(0,o.jsxs)("li",{children:[(0,o.jsx)("span",{children:e.title})," \xa0",(0,o.jsx)("button",{onClick:()=>i(e.id),children:"remove"})]},t))})]})}),m=function(){let[e,t]=(0,r.useState)(0);return console.log("counter render"),(0,o.jsxs)("div",{children:[(0,o.jsx)("h3",{children:"CounterListMemo"}),(0,o.jsx)("p",{children:"Features a Todo list using useReducer and a counter increment button/display. The Todo List component is a child of the Counter component. The TodoList component is wrapped by React.memo()."}),(0,o.jsx)("h3",{children:"Count"}),(0,o.jsx)("p",{children:e}),(0,o.jsx)("button",{onClick:()=>t(e=>e+=1),children:"Increment"}),(0,o.jsx)(T,{})]})}},8712:function(e,t,n){"use strict";n.r(t);var o=n(5893),r=n(4808);t.default=function(){return(0,o.jsx)(r.zv,{})}}},function(e){e.O(0,[774,888,179],function(){return e(e.s=4865)}),_N_E=e.O()}]);